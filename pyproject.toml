[project]
name = "system_tools"
version = "0.1.0"
description = ""
authors = [{ name = "Richie Cahill", email = "richie@tmmworkshop.com" }]
requires-python = "~=3.13.0"
readme = "README.md"
license = "MIT"
dependencies = [
    "apprise",
    "apscheduler",
    "polars",
    "requests",
]

[project.scripts]
snapshot_manager = "system_tools.tools.snapshot_manager:main"
validate_system = "system_tools.system_tests.validate_system:main"
installer = "system_tools.installer.__main__:main"

[dependency-groups]
dev = [
    "mypy",
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "pytest-xdist",
    "ruff",
    "types-requests",
]

[tool.hatch.build.targets.sdist]
include = ["system_tools"]

[tool.hatch.build.targets.wheel]
include = ["system_tools"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]

target-version = "py313"

line-length = 120

lint.select = ["ALL"]
lint.ignore = [
    "G004",   # (PERM) This is a performers nit
    "COM812", # (TEMP) conflicts when used with the formatter
    "ISC001", # (TEMP) conflicts when used with the formatter
    "S603",   # (PERM) This is known to cause a false positive
]

[tool.ruff.lint.per-file-ignores]

"tests/**" = [
    "S101", # (perm) pytest needs asserts
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id"]

[tool.ruff.lint.pylint]
max-args = 9

[tool.coverage.run]
source = ["system_tools"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "if __name__ == \"__main__\":",
]

[tool.pytest.ini_options]
addopts = "-n auto -ra"
# --cov=system_tools --cov-report=term-missing --cov-report=xml --cov-report=html --cov-branch
